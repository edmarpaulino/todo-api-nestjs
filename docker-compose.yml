services:
  mongodb:
    image: mongo:8
    container_name: mongodb
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
    ports:
      - "${MONGO_PORT:-27017}:27017"
    volumes:
      - todo-mongodb-data:/data/db
      - ./docker/mongodb/keyfile/mongodb-keyfile:/etc/mongodb-keyfile:ro
    entrypoint:
      - bash
      - -c
      - |
        cp /etc/mongodb-keyfile /tmp/mongodb-keyfile
        chmod 400 /tmp/mongodb-keyfile
        chown mongodb:mongodb /tmp/mongodb-keyfile
        exec docker-entrypoint.sh mongod --replSet rs0 --bind_ip_all --keyFile /tmp/mongodb-keyfile
    healthcheck:
      test: ["CMD", "mongosh", "--quiet", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 40s
    restart: always

  mongodb-init:
    image: mongo:8
    container_name: mongodb-init
    depends_on:
      mongodb:
        condition: service_healthy
    environment:
      - MONGO_ROOT_USERNAME=${MONGO_ROOT_USERNAME}
      - MONGO_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
    entrypoint: >
      bash -c "
        echo 'Waiting for MongoDB to be ready...';
        sleep 5;
        echo 'Attempting to initialize replica set...';
        mongosh --host mongodb:27017 -u $${MONGO_ROOT_USERNAME} -p $${MONGO_ROOT_PASSWORD} --authenticationDatabase admin --quiet --eval '
          try {
            const status = rs.status();
            console.log(\"Replica set already initialized:\", status.set);
            
            // Reconfigure to use localhost for external access
            const currentConfig = rs.conf();
            if (currentConfig.members[0].host !== \"localhost:27017\") {
              console.log(\"Reconfiguring replica set to use localhost...\");
              currentConfig.members[0].host = \"localhost:27017\";
              const reconfigResult = rs.reconfig(currentConfig);
              console.log(\"Replica set reconfiguration result:\", reconfigResult);
            } else {
              console.log(\"Replica set already configured with localhost\");
            }
          } catch (err) {
            if (err.codeName === \"NotYetInitialized\") {
              console.log(\"Initializing replica set...\");
              const result = rs.initiate({
                _id: \"rs0\",
                members: [
                  { _id: 0, host: \"localhost:27017\" }
                ]
              });
              console.log(\"Replica set initialization result:\", result);
            } else {
              console.log(\"Error checking replica set status:\", err);
              throw err;
            }
          }
        ';
        echo 'Replica set initialization completed';
      "
    restart: "no"

  mongo-express:
    image: mongo-express:1.0.2-20-alpine3.19
    container_name: mongo-express
    environment:
      - ME_CONFIG_MONGODB_URL=mongodb://${MONGO_ROOT_USERNAME}:${MONGO_ROOT_PASSWORD}@mongodb:27017/?authSource=admin&replicaSet=rs0&directConnection=true
      - ME_CONFIG_BASICAUTH_USERNAME=${MONGO_EXPRESS_USERNAME}
      - ME_CONFIG_BASICAUTH_PASSWORD=${MONGO_EXPRESS_PASSWORD}
    ports:
      - "${MONGO_EXPRESS_PORT:-8081}:8081"
    depends_on:
      mongodb:
        condition: service_healthy
    restart: always

volumes:
  todo-mongodb-data:
    driver: local